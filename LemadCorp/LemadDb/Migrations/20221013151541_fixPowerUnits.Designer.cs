// <auto-generated />
using System;
using LemadDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LemadDb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221013151541_fixPowerUnits")]
    partial class fixPowerUnits
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LemadDb.Domain.Entities.Drivers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("pilots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = (byte)0,
                            FirstName = "Fernando",
                            LastName = "Alonso",
                            Price = 20000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Discount = (byte)0,
                            FirstName = "Esteban",
                            LastName = "Ocon",
                            Price = 5000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Discount = (byte)0,
                            FirstName = "Max",
                            LastName = "Verstappen",
                            Price = 25000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Discount = (byte)0,
                            FirstName = "Sergio",
                            LastName = "Perez",
                            Price = 8000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Discount = (byte)0,
                            FirstName = "Charles",
                            LastName = "Leclerc",
                            Price = 12000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Discount = (byte)0,
                            FirstName = "Carlos",
                            LastName = "Sainz",
                            Price = 10000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Discount = (byte)0,
                            FirstName = "Lewis",
                            LastName = "Hamilton",
                            Price = 40000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Discount = (byte)0,
                            FirstName = "George",
                            LastName = "Russell",
                            Price = 5000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            Discount = (byte)0,
                            FirstName = "Lando",
                            LastName = "Norris",
                            Price = 20000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            Discount = (byte)0,
                            FirstName = "Daniel",
                            LastName = "Ricciardo",
                            Price = 15000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            Discount = (byte)0,
                            FirstName = "Valtteri",
                            LastName = "Bottas",
                            Price = 10000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            Discount = (byte)0,
                            FirstName = "Zhou",
                            LastName = "Guanyu",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            Discount = (byte)0,
                            FirstName = "Pierre",
                            LastName = "Gasly",
                            Price = 5000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            Discount = (byte)0,
                            FirstName = "Yuki",
                            LastName = "Tsunoda",
                            Price = 750000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            Discount = (byte)0,
                            FirstName = "Nicholas",
                            LastName = "Latifi",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            Discount = (byte)0,
                            FirstName = "Alexander",
                            LastName = "Albon",
                            Price = 2000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            Discount = (byte)0,
                            FirstName = "Sebastian",
                            LastName = "Vettel",
                            Price = 15000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            Discount = (byte)0,
                            FirstName = "Lance",
                            LastName = "Stroll",
                            Price = 10000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            Discount = (byte)0,
                            FirstName = "Kevin",
                            LastName = "Magnussen",
                            Price = 6000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            Discount = (byte)0,
                            FirstName = "Mick",
                            LastName = "Schumacher",
                            Price = 1000000m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.PowerUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("powerUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = (byte)0,
                            Name = "Red Bull Powertrains",
                            Price = 50000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Discount = (byte)0,
                            Name = "Ferrari engines",
                            Price = 40000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Discount = (byte)0,
                            Name = "Mercedes engines",
                            Price = 35000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Discount = (byte)0,
                            Name = "Renault engines",
                            Price = 30000000m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.Principals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("principals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = (byte)0,
                            FirstName = "Mattias",
                            LastName = "Binotto",
                            Price = 3000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Discount = (byte)0,
                            FirstName = "Frédéric",
                            LastName = "Vasseur",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Discount = (byte)0,
                            FirstName = "Franz",
                            LastName = "Tost",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Discount = (byte)0,
                            FirstName = "Otmar",
                            LastName = "Szafnauer",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Discount = (byte)0,
                            FirstName = "Guenther",
                            LastName = "Steiner",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Discount = (byte)0,
                            FirstName = "Andreas",
                            LastName = "Seidl",
                            Price = 2000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Discount = (byte)0,
                            FirstName = "Toto",
                            LastName = "Wolff",
                            Price = 9100000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Discount = (byte)0,
                            FirstName = "Christian",
                            LastName = "Horner",
                            Price = 10000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            Discount = (byte)0,
                            FirstName = "Jost",
                            LastName = "Capito",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            Discount = (byte)0,
                            FirstName = "Mike",
                            LastName = "Krack",
                            Price = 1000000m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.RaceEngineers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("mechanics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = (byte)0,
                            FirstName = "Ben",
                            LastName = "Michell",
                            Price = 2000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Discount = (byte)0,
                            FirstName = "Chris",
                            LastName = "Cronin",
                            Price = 1500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Discount = (byte)0,
                            FirstName = "Jorn",
                            LastName = "Becker",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Discount = (byte)0,
                            FirstName = "Alex",
                            LastName = "Chan",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Discount = (byte)0,
                            FirstName = "Mattia",
                            LastName = "Spini",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Discount = (byte)0,
                            FirstName = "Pierre",
                            LastName = "Hamelin",
                            Price = 800000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Discount = (byte)0,
                            FirstName = "Gary",
                            LastName = "Gannon",
                            Price = 750000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Discount = (byte)0,
                            FirstName = "Ed",
                            LastName = "Regan",
                            Price = 600000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            Discount = (byte)0,
                            FirstName = "Gaetan",
                            LastName = "Jego",
                            Price = 500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            Discount = (byte)0,
                            FirstName = "James",
                            LastName = "Urwin",
                            Price = 400000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            Discount = (byte)0,
                            FirstName = "Josh",
                            LastName = "Peckett",
                            Price = 2000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            Discount = (byte)0,
                            FirstName = "Karel",
                            LastName = "Loos",
                            Price = 1500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            Discount = (byte)0,
                            FirstName = "Riccardo",
                            LastName = "Musconi",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            Discount = (byte)0,
                            FirstName = "Peter",
                            LastName = "Bonnington",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            Discount = (byte)0,
                            FirstName = "Gianpiero",
                            LastName = "Lambiase",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            Discount = (byte)0,
                            FirstName = "Hugh",
                            LastName = "Bird",
                            Price = 800000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            Discount = (byte)0,
                            FirstName = "Jason",
                            LastName = "Prior",
                            Price = 750000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            Discount = (byte)0,
                            FirstName = "Christopher",
                            LastName = "Hayes",
                            Price = 600000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            Discount = (byte)0,
                            FirstName = "Riccardo",
                            LastName = "Adami",
                            Price = 500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            Discount = (byte)0,
                            FirstName = "Xavier Marcos",
                            LastName = "Padros",
                            Price = 400000m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.TechnicalChiefs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("engineers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = (byte)0,
                            FirstName = "Pierre",
                            LastName = "Wache",
                            Price = 2000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Discount = (byte)0,
                            FirstName = "Enrico",
                            LastName = "Cardile",
                            Price = 1500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Discount = (byte)0,
                            FirstName = "Simone",
                            LastName = "Resta",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Discount = (byte)0,
                            FirstName = "Matt",
                            LastName = "Harman",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Discount = (byte)0,
                            FirstName = "Mike",
                            LastName = "Elliott",
                            Price = 1000000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Discount = (byte)0,
                            FirstName = "Ben",
                            LastName = "Watkins",
                            Price = 800000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            Discount = (byte)0,
                            FirstName = "Francois-Xavier",
                            LastName = "Demaison",
                            Price = 750000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Discount = (byte)0,
                            FirstName = "Jody",
                            LastName = "Egginton",
                            Price = 600000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            Discount = (byte)0,
                            FirstName = "Jan",
                            LastName = "Monchaux",
                            Price = 500000m,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            Discount = (byte)0,
                            FirstName = "Andrew",
                            LastName = "Green",
                            Price = 400000m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.User.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EntrepriseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b8aa33b7-9965-436e-8de1-21160760f8b1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b9b1e40-7acc-4ebc-a37c-ba1715d20d6e",
                            Email = "admin@lemadrid.com",
                            EmailConfirmed = false,
                            EntrepriseName = "Admin",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEKAgbZqVpSuY/48Jfr2MiMEv708uWUBqrgQXppwf+i8rrkEvJ8miX4qHv/U4S60mUA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7425c2ec-c2a0-4763-a762-ff23097097ac",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "d706a1b1-c040-4af7-aeef-fff420bd6334",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "72441a7d-430a-4696-9434-cfdf723f0c0a",
                            Email = "hugolapointe@cegepsth.qc.ca",
                            EmailConfirmed = false,
                            EntrepriseName = "Cégep Saint-Hyacinthe",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEAzsxTamfufEkUdrl3HF95TY7mYAEyuFTqog3QSW2tt0whSf+DGJWTrUpDZLxTuyEQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "67b40faa-191d-46a5-9bd9-153ef4e90912",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "be5fcc54-3b48-4940-a8e3-bcc1c92db559",
                            ConcurrencyStamp = "fd92b680-4ba9-4f0b-ac10-dab50fa5d994",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "5352daf2-bdcd-4dee-acdb-38072239ff10",
                            ConcurrencyStamp = "c775d7e2-a1c9-4f1c-a07f-30bdb77b6878",
                            Name = "Seller",
                            NormalizedName = "SELLER"
                        },
                        new
                        {
                            Id = "782b9ded-9e21-4950-90dd-ce2851e77f59",
                            ConcurrencyStamp = "cebd35ed-b865-4aac-b470-17e74edd9e85",
                            Name = "Buyer",
                            NormalizedName = "BUYER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
