// <auto-generated />
using System;
using LemadDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LemadDb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221025120325_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CommandProduct", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CommandProduct");
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.Command", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("LemadDb.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("MaxContractTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategory")
                        .HasColumnType("int");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateNaissance = new DateTime(1981, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Teflonso, the spanish GOAT",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Fernando Alonso",
                            Path = "wwwroot/img/products/drivers/FernandoAlonso.png",
                            Price = 20000000m,
                            ProductCategory = 0,
                            Quote = "I am one of the best to have raced in F1. I am probably not fastest in qualifying, or the wet, but I am 9.5 in all areas. I try to benefit from that.",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            DateNaissance = new DateTime(1996, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Esteban Ocon",
                            Path = "wwwroot/img/products/drivers/EstebanOcon.png",
                            Price = 5000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            DateNaissance = new DateTime(1997, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mad Max",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Max Verstappen",
                            Path = "wwwroot/img/products/drivers/MaxVerstappen.png",
                            Price = 25000000m,
                            ProductCategory = 0,
                            Quote = "Mistakes happen, and they happen to the best of us.",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            DateNaissance = new DateTime(1990, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Checo",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Sergio Perez",
                            Path = "wwwroot/img/products/drivers/SergioPerez.png",
                            Price = 8000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            DateNaissance = new DateTime(1997, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Charles Leclerc",
                            Path = "wwwroot/img/products/drivers/CharlesLeclerc.png",
                            Price = 12000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            DateNaissance = new DateTime(1994, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Carlos Sainz",
                            Path = "wwwroot/img/products/drivers/CarlosSainz.png",
                            Price = 10000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            DateNaissance = new DateTime(1985, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Lewis Hamilton",
                            Path = "wwwroot/img/products/drivers/LewisHamilton.png",
                            Price = 40000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            DateNaissance = new DateTime(1998, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 2,
                            MaxContractTime = 5,
                            Name = "George Russell",
                            Path = "wwwroot/img/products/drivers/GeorgeRussell.png",
                            Price = 5000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 9,
                            DateNaissance = new DateTime(1999, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Lando Norris",
                            Path = "wwwroot/img/products/drivers/LandoNorris.png",
                            Price = 20000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            DateNaissance = new DateTime(1989, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Daniel Ricciardo",
                            Path = "wwwroot/img/products/drivers/DanielRicciardo.png",
                            Price = 15000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            DateNaissance = new DateTime(1989, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Valtteri Bottas",
                            Path = "wwwroot/img/products/drivers/ValtteriBottas.png",
                            Price = 10000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            DateNaissance = new DateTime(1999, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Zhou Guanyu",
                            Path = "wwwroot/img/products/drivers/ZhouGuanyu.png",
                            Price = 1000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            DateNaissance = new DateTime(1996, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 80,
                            MaxContractTime = 5,
                            Name = "Pierre Gasly",
                            Path = "wwwroot/img/products/drivers/PierreGasly.png",
                            Price = 5000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 14,
                            DateNaissance = new DateTime(2000, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Yuki Tsunoda",
                            Path = "wwwroot/img/products/drivers/YukiTsunoda.png",
                            Price = 750000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            DateNaissance = new DateTime(1995, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 60,
                            MaxContractTime = 5,
                            Name = "Nicholas Latifi",
                            Path = "wwwroot/img/products/drivers/NicholasLatifi.png",
                            Price = 1000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 16,
                            DateNaissance = new DateTime(1996, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Alexander Albon",
                            Path = "wwwroot/img/products/drivers/AlexanderAlbon.png",
                            Price = 2000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            DateNaissance = new DateTime(1987, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Sebastian Vettel",
                            Path = "wwwroot/img/products/drivers/SebastianVettel.png",
                            Price = 15000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            DateNaissance = new DateTime(1998, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 49,
                            MaxContractTime = 5,
                            Name = "Lance Stroll",
                            Path = "wwwroot/img/products/drivers/LanceStroll.png",
                            Price = 10000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 19,
                            DateNaissance = new DateTime(1992, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 22,
                            MaxContractTime = 5,
                            Name = "Kevin Magnussen",
                            Path = "wwwroot/img/products/drivers/KevinMagnussen.png",
                            Price = 6000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 2
                        },
                        new
                        {
                            Id = 20,
                            DateNaissance = new DateTime(1999, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Mick Schumacher",
                            Path = "wwwroot/img/products/drivers/MickSchumacher.png",
                            Price = 1000000m,
                            ProductCategory = 0,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Mattia Binotto",
                            Path = "wwwroot/img/products/principals/MattiaBinotto.png",
                            Price = 3000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Frédéric Vasseur",
                            Path = "wwwroot/img/products/principals/FredericVasseur.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 2
                        },
                        new
                        {
                            Id = 23,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 25,
                            MaxContractTime = 5,
                            Name = "Franz Tost",
                            Path = "wwwroot/img/products/principals/FranzTost.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Otmar Szafnauer",
                            Path = "wwwroot/img/products/principals/OtmarSzafnauer.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 34,
                            MaxContractTime = 5,
                            Name = "Guenther Steiner",
                            Path = "wwwroot/img/products/principals/GuentherSteiner.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 26,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Andreas Seidl",
                            Path = "wwwroot/img/products/principals/AndreasSeidl.png",
                            Price = 2000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Toto Wolff",
                            Path = "wwwroot/img/products/principals/TotoWolff.png",
                            Price = 9100000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 13,
                            MaxContractTime = 5,
                            Name = "Christian Horner",
                            Path = "wwwroot/img/products/principals/ChristianHorner.png",
                            Price = 10000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 29,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Jost Capito",
                            Path = "wwwroot/img/products/principals/JostCapito.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Mike Krack",
                            Path = "wwwroot/img/products/principals/MikeKrack.png",
                            Price = 1000000m,
                            ProductCategory = 1,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            DateNaissance = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Red Bull Powertrains",
                            Path = "wwwroot/img/products/powerunits/RedBullPowertrains.png",
                            Price = 50000000m,
                            ProductCategory = 2,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            DateNaissance = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Ferrari engines",
                            Path = "wwwroot/img/products/powerunits/FerrariEngines.png",
                            Price = 40000000m,
                            ProductCategory = 2,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            DateNaissance = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 15,
                            MaxContractTime = 5,
                            Name = "Mercedes engines",
                            Path = "wwwroot/img/products/powerunits/MercedesEngines.png",
                            Price = 35000000m,
                            ProductCategory = 2,
                            Quote = "",
                            Status = 2
                        },
                        new
                        {
                            Id = 34,
                            DateNaissance = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Renault engines",
                            Path = "wwwroot/img/products/powerunits/RenaultEngines.png",
                            Price = 30000000m,
                            ProductCategory = 2,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Jody Egginton",
                            Path = "wwwroot/img/products/technicalchiefs/JodyEgginton.png",
                            Price = 600000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 36,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Pierre Washe",
                            Path = "wwwroot/img/products/technicalchiefs/PierreWashe.png",
                            Price = 2000000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 37,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 10,
                            MaxContractTime = 5,
                            Name = "Enrico Cardile",
                            Path = "wwwroot/img/products/technicalchiefs/EnricoCardile.png",
                            Price = 1500000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 38,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Simone Resta",
                            Path = "wwwroot/img/products/technicalchiefs/SimoneResta.png",
                            Price = 1000000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 39,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Matt Harman",
                            Path = "wwwroot/img/products/technicalchiefs/MattHarman.png",
                            Price = 1000000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 40,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Mike Elliott",
                            Path = "wwwroot/img/products/technicalchiefs/MikeElliott.png",
                            Price = 1000000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 41,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 10,
                            MaxContractTime = 5,
                            Name = "Ben Watkins",
                            Path = "wwwroot/img/products/technicalchiefs/BenWatkins.png",
                            Price = 800000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 42,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Francois-Xavier Demaison",
                            Path = "wwwroot/img/products/technicalchiefs/FrancoisXavierDemaison.png",
                            Price = 750000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 43,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Jan Monchaux",
                            Path = "wwwroot/img/products/technicalchiefs/JanMonchaux.png",
                            Price = 500000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 44,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Andrew Green",
                            Path = "wwwroot/img/products/technicalchiefs/AndrewGreen.png",
                            Price = 400000m,
                            ProductCategory = 4,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 45,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Ben Michell",
                            Path = "wwwroot/img/products/raceengineers/BenMichell.png",
                            Price = 2000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 46,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Chris Cronin",
                            Path = "wwwroot/img/products/raceengineers/ChrisCronin.png",
                            Price = 1500000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 47,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Jorn Becker",
                            Path = "wwwroot/img/products/raceengineers/JornBecker.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 48,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 10,
                            MaxContractTime = 5,
                            Name = "Alex Chan",
                            Path = "wwwroot/img/products/raceengineers/AlexChan.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 49,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Mattia Spini",
                            Path = "wwwroot/img/products/raceengineers/MattiaSpini.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 5,
                            MaxContractTime = 5,
                            Name = "Pierre Hamelin",
                            Path = "wwwroot/img/products/raceengineers/PierreHamelin.png",
                            Price = 800000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 51,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Gary Gannon",
                            Path = "wwwroot/img/products/raceengineers/GaryGannon.png",
                            Price = 750000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Ed Regan",
                            Path = "wwwroot/img/products/raceengineers/EdRegan.png",
                            Price = 600000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Gaetan Jego",
                            Path = "wwwroot/img/products/raceengineers/GaetanJego.png",
                            Price = 500000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "James Urwin",
                            Path = "wwwroot/img/products/raceengineers/JamesUrwin.png",
                            Price = 400000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 5,
                            MaxContractTime = 5,
                            Name = "Josh Pecket",
                            Path = "wwwroot/img/products/raceengineers/JoshPecket.png",
                            Price = 2000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 4
                        },
                        new
                        {
                            Id = 56,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Karel Loos",
                            Path = "wwwroot/img/products/raceengineers/KarelLoos.png",
                            Price = 1500000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Riccardo Musconi",
                            Path = "wwwroot/img/products/raceengineers/RiccardoMusconi.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Peter Bonnington",
                            Path = "wwwroot/img/products/raceengineers/PeterBonnington.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Gianpiero Lambiase",
                            Path = "wwwroot/img/products/raceengineers/GianpieroLambiase.png",
                            Price = 1000000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Hugh Bird",
                            Path = "wwwroot/img/products/raceengineers/HughBird.png",
                            Price = 800000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Jason Prior",
                            Path = "wwwroot/img/products/raceengineers/JasonPrior.png",
                            Price = 750000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Christopher Hayes",
                            Path = "wwwroot/img/products/raceengineers/CristopherHayes.png",
                            Price = 600000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Riccardo Adami",
                            Path = "wwwroot/img/products/raceengineers/RiccardoAdami.png",
                            Price = 500000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        },
                        new
                        {
                            Id = 64,
                            DateNaissance = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Discount = 0,
                            MaxContractTime = 5,
                            Name = "Xavier Marcos Pardos",
                            Path = "wwwroot/img/products/raceengineers/XavierMarcosPardos.png",
                            Price = 400000m,
                            ProductCategory = 3,
                            Quote = "",
                            Status = 0
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.User.AddressUser", b =>
                {
                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresseCiviqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AddressId", "UserId");

                    b.HasIndex("AdresseCiviqueId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AddressUser");

                    b.HasData(
                        new
                        {
                            AddressId = new Guid("92de359d-d08b-42b1-808e-435e5af4648e"),
                            UserId = new Guid("2033cc3d-465a-4c6c-a651-4e4dd0d4a264")
                        },
                        new
                        {
                            AddressId = new Guid("92de359d-d08b-42b1-808e-435e5af4648e"),
                            UserId = new Guid("b2438eb6-f410-408f-81e2-d62003dccd55")
                        },
                        new
                        {
                            AddressId = new Guid("92de359d-d08b-42b1-808e-435e5af4648e"),
                            UserId = new Guid("8c6d074d-a125-452e-a29b-7dfbd7b18cf4")
                        },
                        new
                        {
                            AddressId = new Guid("92de359d-d08b-42b1-808e-435e5af4648e"),
                            UserId = new Guid("15f0e0a2-63a3-4568-b14d-8a869b9f4d97")
                        },
                        new
                        {
                            AddressId = new Guid("01cb6092-9f0f-4d61-80f3-c579a010b7a5"),
                            UserId = new Guid("9bae8c5b-fa89-444a-994f-1dab919969dd")
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.User.AdresseCivique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CivicAddresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92de359d-d08b-42b1-808e-435e5af4648e"),
                            Address = "3000 Av. Boullé",
                            City = "Saint-Hyacinthe",
                            Country = "Canada",
                            PostalCode = "J2S 1H9",
                            Province = "Québec"
                        },
                        new
                        {
                            Id = new Guid("01cb6092-9f0f-4d61-80f3-c579a010b7a5"),
                            Address = "1899 Henri-Becquerel",
                            City = "Sainte-Julie",
                            Country = "Canada",
                            PostalCode = "J3E 1V6",
                            Province = "Québec"
                        });
                });

            modelBuilder.Entity("LemadDb.Domain.User.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "2dbaee2c-b197-48b2-ad9a-56d682c70a50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "818b7b38-ffb2-4724-beef-1280ebc49f29",
                            Email = "admin@lemadrid.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LEMADRID.COM",
                            NormalizedUserName = "ADMIN@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDMuGfNETZ4m90TMriLAaqk60Q7MS/SlbJbBT4Sn0EszFMaaxDiuwozG0ptHVDCjeA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "41b1f8f4-4fed-47ee-9b1a-030e48fc871f",
                            TwoFactorEnabled = false,
                            UserId = new Guid("aea2b484-cddc-424c-856e-5dbde029d966"),
                            UserName = "admin@lemadrid.com"
                        },
                        new
                        {
                            Id = "873ff4ae-1477-48c8-b304-740bf56aedff",
                            AccessFailedCount = 0,
                            Cellphone = "(450)-773-6800",
                            ConcurrencyStamp = "c671342e-629e-480e-85e4-eb3057cd1f0d",
                            Email = "hugo@lemadrid.com",
                            EmailConfirmed = false,
                            FirstName = "Hugo",
                            LastName = "Lapointe",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUGO@LEMADRID.COM",
                            NormalizedUserName = "HUGO@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHh7sKUx5kdYGkhHeZK75I6lBfp8prpdVHXjlbaiaOmDgK/p8TSo1tK/a6CbW4EzOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f73eaaf9-3de1-4013-90c0-17b025a2548e",
                            TwoFactorEnabled = false,
                            UserId = new Guid("2033cc3d-465a-4c6c-a651-4e4dd0d4a264"),
                            UserName = "hugo@lemadrid.com"
                        },
                        new
                        {
                            Id = "c6f9a1bc-6887-4199-b997-d5a8c0edf4ed",
                            AccessFailedCount = 0,
                            Cellphone = "(450)-649-8594",
                            ConcurrencyStamp = "0e4af7d4-ab32-490f-8777-6000c579800e",
                            Email = "karl.mainville@lemadrid.com",
                            EmailConfirmed = false,
                            FirstName = "Karl",
                            LastName = "Mainville",
                            LockoutEnabled = false,
                            NormalizedEmail = "KARL.MAINVILLE@LEMADRID.COM",
                            NormalizedUserName = "KARL.MAINVILLE@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF2LQfDfSdJBOKH+6WatJUIJ9hL0IXTtB+MNI/479NWkHcA+6fAKiSTkFPNVL2zVWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0735f732-fa80-4128-905d-9657016e107a",
                            TwoFactorEnabled = false,
                            UserId = new Guid("9bae8c5b-fa89-444a-994f-1dab919969dd"),
                            UserName = "karl.mainville@lemadrid.com"
                        },
                        new
                        {
                            Id = "9ab6f5b2-7336-4ee4-8798-a926ac0ce3ad",
                            AccessFailedCount = 0,
                            Cellphone = "(450)-538-3982",
                            ConcurrencyStamp = "30a90723-1533-4b55-a0f1-86f5c43623a9",
                            Email = "maxime.lefebvre@lemadrid.com",
                            EmailConfirmed = false,
                            FirstName = "Maxime",
                            LastName = "Lefebvre",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAXIME.LEFEBVRE@LEMADRID.COM",
                            NormalizedUserName = "MAXIME.LEFEBVRE@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBKxEJqALdA9dGtzJbCDSc9KD6mMnFQIUGB/rtK8Y/bmYyoejXDTIldfzGkE0kDy1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a231a858-597d-40b5-80d5-7923b0371fcb",
                            TwoFactorEnabled = false,
                            UserId = new Guid("b2438eb6-f410-408f-81e2-d62003dccd55"),
                            UserName = "maxime.lefebvre@lemadrid.com"
                        },
                        new
                        {
                            Id = "bdaf8d3c-2e59-4a98-a456-5fb836837dc9",
                            AccessFailedCount = 0,
                            Cellphone = "(450)-213-5697",
                            ConcurrencyStamp = "86332c71-e7de-41c6-b1d4-681dfffc3057",
                            Email = "louis.garceau@lemadrid.com",
                            EmailConfirmed = false,
                            FirstName = "Louis",
                            LastName = "Garceau",
                            LockoutEnabled = false,
                            NormalizedEmail = "LOUIS.GARCEAU@LEMADRID.COM",
                            NormalizedUserName = "LOUIS.GARCEAU@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEO4XyuBOcPcDa+R+UqM0aXvAuE4s4480U71YKdhBP+bPqk+/suE/kpM2fxU1paZWbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94cc138f-f290-4598-b4d1-922d7470a700",
                            TwoFactorEnabled = false,
                            UserId = new Guid("8c6d074d-a125-452e-a29b-7dfbd7b18cf4"),
                            UserName = "louis.garceau@lemadrid.com"
                        },
                        new
                        {
                            Id = "3a736dfc-9e91-4f24-b4d7-a094650686ba",
                            AccessFailedCount = 0,
                            Cellphone = "(450)-789-4673",
                            ConcurrencyStamp = "34c3b59f-e374-41b9-aa93-a3ab5833740e",
                            Email = "laurent.brochu@lemadrid.com",
                            EmailConfirmed = false,
                            FirstName = "Laurent",
                            LastName = "Brochu",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAURENT.BROCHU@LEMADRID.COM",
                            NormalizedUserName = "LAURENT.BROCHU@LEMADRID.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEHCwQZ3ujKsY6rUu/7C8AzQqo48gYV7/Jwc7qE/pG7U670FZnQn+SrisumBbyZ9KoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d07c427c-d495-4175-ad04-bdc5f591ed41",
                            TwoFactorEnabled = false,
                            UserId = new Guid("15f0e0a2-63a3-4568-b14d-8a869b9f4d97"),
                            UserName = "laurent.brochu@lemadrid.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "dcc0b994-612c-4db3-900e-b5c137ffac5e",
                            ConcurrencyStamp = "f265ecac-e8bb-4618-abe3-ffb1066b01f5",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "340fe630-5cb3-4a79-83ea-6ec89dbbb521",
                            ConcurrencyStamp = "b1aa7f5f-b682-4410-8a6f-8b760dcd1cdd",
                            Name = "buyer",
                            NormalizedName = "BUYER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "2dbaee2c-b197-48b2-ad9a-56d682c70a50",
                            RoleId = "dcc0b994-612c-4db3-900e-b5c137ffac5e"
                        },
                        new
                        {
                            UserId = "873ff4ae-1477-48c8-b304-740bf56aedff",
                            RoleId = "340fe630-5cb3-4a79-83ea-6ec89dbbb521"
                        },
                        new
                        {
                            UserId = "c6f9a1bc-6887-4199-b997-d5a8c0edf4ed",
                            RoleId = "340fe630-5cb3-4a79-83ea-6ec89dbbb521"
                        },
                        new
                        {
                            UserId = "9ab6f5b2-7336-4ee4-8798-a926ac0ce3ad",
                            RoleId = "340fe630-5cb3-4a79-83ea-6ec89dbbb521"
                        },
                        new
                        {
                            UserId = "bdaf8d3c-2e59-4a98-a456-5fb836837dc9",
                            RoleId = "340fe630-5cb3-4a79-83ea-6ec89dbbb521"
                        },
                        new
                        {
                            UserId = "3a736dfc-9e91-4f24-b4d7-a094650686ba",
                            RoleId = "340fe630-5cb3-4a79-83ea-6ec89dbbb521"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CommandProduct", b =>
                {
                    b.HasOne("LemadDb.Domain.Entities.Command", null)
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LemadDb.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LemadDb.Domain.User.AddressUser", b =>
                {
                    b.HasOne("LemadDb.Domain.User.AdresseCivique", "AdresseCivique")
                        .WithMany("AddressUser")
                        .HasForeignKey("AdresseCiviqueId");

                    b.HasOne("LemadDb.Domain.User.ApplicationUser", "ApplicationUser")
                        .WithMany("CivicAddress")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("AdresseCivique");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("LemadDb.Domain.User.ApplicationUser", b =>
                {
                    b.HasOne("LemadDb.Domain.Entities.Command", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LemadDb.Domain.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LemadDb.Domain.User.AdresseCivique", b =>
                {
                    b.Navigation("AddressUser");
                });

            modelBuilder.Entity("LemadDb.Domain.User.ApplicationUser", b =>
                {
                    b.Navigation("CivicAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
