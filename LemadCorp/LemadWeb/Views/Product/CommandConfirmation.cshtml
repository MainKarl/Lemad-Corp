@using Microsoft.Extensions.Options
@model CommandVM

@inject IOptions<StripeOptions> StripeOptions

@section Styles {
<link rel="stylesheet" href="~/sass/command.css" />
}

@Html.Hidden("OrFName", Model.FirstName)
@Html.Hidden("OrLName", Model.LastName)
@Html.Hidden("OrEmail", Model.Email)
@Html.Hidden("OrPhone", Model.Phone)
@Html.Hidden("OrAddress", Model.Address)
@Html.Hidden("OrCity", Model.City)
@Html.Hidden("OrProvince", Model.Province)
@Html.Hidden("OrCountry", Model.Country)
@Html.Hidden("OrPostal", Model.PostalCode)

<div class="container background-grey">
    <div class="row">
        <div class="col-md-2">
        </div>
        <div class="col-md-8 form-background">
            <br />
            <br />
            <h2>Are you certain you want to purchase these items?</h2>
            <hr />
            <h4>Your command ID : @Model.CommandGuid</h4>
            <hr />
            <h4>First name : @Model.FirstName</h4>
            <h4>Last name : @Model.LastName</h4>
            <h4>Email : @Model.Email</h4>
            <h4>Phone number : @Model.Phone</h4>
            <h4>Address : @Model.Address</h4>
            <h4>City : @Model.City</h4>
            <h4>Province : @Model.Province</h4>
            <h4>Country: @Model.Country</h4>
            <h4>Postal code: @Model.PostalCode</h4>
            <hr />
            @foreach (var item in Model.Products)
            {
                foreach (var dict in Model.CommandDictionary)
                {
                    if (@item.Id == dict.Key)
                    {
                        if (dict.Value > 1)
                        {
                            <h4>@item.Name for @dict.Value years</h4>
                        }
                        else
                        {
                            <h4>@item.Name for @dict.Value year</h4>
                        }
                    }
                }
            }
            <hr />
            <h4>Total before discount: @Model.Total</h4>
            <h4>Total discount: @Model.TotalDiscount</h4>
            <h4>Total with discount: @Model.TotalWithDiscount</h4>
            <h4>Total: @Model.TotalWithTaxes</h4>
            <form asp-action="CommandConfirmation">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input asp-for="CommandGuid" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="FirstName" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="LastName" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Email" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Phone" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Address" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="City" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Province" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Country" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="PostalCode" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Total" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="TotalDiscount" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="TotalWithDiscount" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="TotalWithTaxes" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input asp-for="Products" type="hidden" class="form-control" />
                </div>
                <div class="form-group">
                    <input id='card-VM' asp-for="CardNumber" type="hidden" class="form-control" />
                </div>
                <br />
                <br />
                <div class="display-buttons">
                    <button id="payment-request-button" class="checkout-button" type="button" href="#payment-form">
                        Proceed to payment
                    </button>
                    <div class="checkout-button center-button" onclick="callCart()">
                        Cancel the command
                    </div>
                </div>
                <a id="cart-link" style="display:none; width:auto%; height: 0%" asp-area="" asp-controller="Product" asp-action="Cart" asp-route-ProductId=""></a>
                <br />
                <br />
            </form>
        </div>
    </div>
</div>

<section id="payment-section" class="modal fade rounded" role="dialog">
    <form id="payment-form" class="modal-dialog modal-content bg-light" method="post" accept-charset="UTF-8">

        <div class="modal-header">
            <h4 class="modal-title">Payment Informations</h4>
        </div>

        <div class="modal-body">
            <div class="form-row mb-2">
                <div class="col">
                    <label for="name" class="control-label">Name</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-user"></i></span>
                        </div>
                        <input id="name" name="name" class="form-control border-left-0" type="text" placeholder="Nom" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="phone" class="control-label">Phone</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-phone"></i></span>
                        </div>
                        <input id="phone" name="phone" class="form-control border-left-0" type="text" placeholder="Phone number" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="email" class="control-label">Email</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-at"></i></span>
                        </div>
                        <input id="email" class="form-control border-left-0" type="email" placeholder="Email address" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="address" class="control-label">Address</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-home"></i></span>
                        </div>
                        <input id="address" class="form-control border-left-0" type="text" placeholder="Address" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="city" class="control-label">City</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-city"></i></span>
                        </div>
                        <input id="city" class="form-control border-left-0" type="text" placeholder="City" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="province" class="control-label">Province</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-earth-americas"></i></span>
                        </div>
                        <input id="province" 
                            class="form-control border-left-0" 
                            type="text" 
                            placeholder="Province"
                            required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="country" class="control-label">Country</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-globe"></i></span>
                        </div>
                        <input id="country" class="form-control border-left-0" type="text" placeholder="Country" required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="postalCode" class="control-label">Postal Code</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-mail-bulk"></i></span>
                        </div>
                        <input id="postalCode"
                            name="postalCode"
                            class="form-control border-left-0" 
                            type="text" 
                            placeholder="Postal Code" 
                            pattern="^[A-Za-z]\d[A-Za-z][ -]?\d[A-Za-z]\d$"
                            oninvalid="this.setCustomValidity('The postal code must respect the Canadien postal code system e.g. A1S2S3')"
                            oninput="this.setCustomValidity('')"
                            required>
                    </div>
                </div>
            </div>

            <div class="form-row mb-2">
                <div class="col">
                    <label for="card" class="control-label">Card</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white"><i class="fas fa-credit-card"></i></span>
                        </div>
                        <div id="card" class="form-control border-left-0"></div>
                    </div>
                    <div id="card-errors" role="alert"></div>
                </div>
            </div>


            <div class="modal-footer row">
                <div class="float-right">
                    <button id="cancel-btn" type="button" class="btn btn-outline-danger">Cancel</button>
                    <button id="reset-btn" type="reset" class="btn btn-outline-secondary">Reset</button>
                    <button id="submit-btn" type="submit" class="btn btn-success">Confirm</button>
                </div>
            </div>
        </div>
    </form>
</section>

<script type="text/javascript">
    function clearCart() {
            localStorage.clear();
        }
</script>

@section Scripts {
    <script src="https://js.stripe.com/v3/" charset="utf-8"></script>
    <script charset="utf-8">

        (function () {
            "use strict";

            $(document).ready(function () {
                document.getElementById('phone').value = document.getElementById('OrPhone').value
                document.getElementById('address').value = document.getElementById('OrAddress').value
                document.getElementById('city').value = document.getElementById('OrCity').value
                document.getElementById('email').value = document.getElementById('OrEmail').value
                document.getElementById('province').value = document.getElementById('OrProvince').value
                document.getElementById('country').value = document.getElementById('OrCountry').value
                document.getElementById('postalCode').value = document.getElementById('OrPostal').value
                document.getElementById('name').value = document.getElementById('OrFName').value + ' ' + document.getElementById('OrLName').value
                $("#payment-request-button").on("click", function () {
                    $("#payment-section").modal({
                        backdrop: 'static'
                    });

                    $("#cancel-btn").on("click", function () {
                        $("#payment-section").modal("hide");
                    });
                });

                let stripe = Stripe("@StripeOptions.Value.PublicKey");
                let elements = stripe.elements();

                let card = elements.create("card", {
                    style: {
                        base: {
                            fontSize: "16px",
                            fontWeight: "400",
                            color: "#495057",
                        }
                    },
                    hideIcon: true,
                    hidePostalCode: true
                });

                card.mount("#card");

                card.addEventListener('change', function (event) {
                    var displayError = document.getElementById('card-errors');
                    if (event.error) {
                        displayError.textContent = event.error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });

                // Create a token or display an error when the form is submitted.
                var form = $("#payment-form");
                form.on('submit', function (e) {
                    e.preventDefault();
                    DisableButton();
                    stripe.createToken(card).then(function (result) {
                        if (result.error) {
                            $("#card-errors").textContent = result.error.message;
                            EnableButton()
                        } else {
                            let cost;
                            let costInFloat;
                    
                            $.getJSON("/product/GetCost",
                                function(data) {
                                    if (data.amount >= 1000000) {
                                        var verifyCost = data.amount;
                                        var sciCost = verifyCost.toExponential(2);
                                        var exponential = parseInt(sciCost[sciCost.length-1])-5;
                                        for (let i = 0; i < exponential; i++) {
                                            verifyCost /= 10;
                                        }

                                        cost = verifyCost;
                                        costInFloat = parseFloat(cost);
                                    }
                                    else {
                                        cost = data.amount;
                                        costInFloat = parseFloat(cost);
                                    }

                                    // Send the token to your server.
                                    stripeTokenHandler(result.token, costInFloat);
                                }
                            )
                        }
                    });
                });

                function stripeTokenHandler(token, costInFloat) {
                    fetch('/product/charges', {
                        method: 'post',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify({
                            token: token.id,
                            description: "@Model.FirstName",
                            amountInCents: costInFloat * 100,
                            currencyCode: "cad",
                            phone: document.getElementById('phone').value,
                            name: document.getElementById('name').value,
                            email: document.getElementById('email').value,
                            address: document.getElementById('address').value,
                            city: document.getElementById('city').value,
                            province: document.getElementById('province').value,
                            country: document.getElementById('country').value,
                            postalCode: document.getElementById('postalCode').value,
                        })
                    // Report to the browser that the payment was successful or failed.
                    }).then(function (response) {
                        if (response.ok) {
                            ConfirmCommand();
                            clearCart();
                            window.location.replace("@Url.Action("Confirmation")");
                        } else {
                            console.log("fail");
                            alert('Error with the purchase');
                            EnableButton()
                            //e.complete('fail');
                        }
                    });
                }

                function ConfirmCommand()
                {
                   // Faire la commande dans la BD
                   fetch('/product/CommandConfirmation', {
                        method: 'post',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify({ 
                            FirstName: "@Model.FirstName",
                            LastName: "@Model.LastName",
                            Email: "@Model.Email",
                            PhoneNumber:"@Model.Phone",
                            Address: "@Model.Address",
                            City: "@Model.City",
                            Province : "@Model.Province",
                            Country : "@Model.Country",
                            PostalCode : "@Model.PostalCode",
                            Total : "@Model.Total",
                            TotalDiscount : "@Model.TotalDiscount",
                            TotalWithDiscount : "@Model.TotalWithDiscount",
                            TotalWithTaxes : "@Model.TotalWithTaxes",
                            Id : "@Model.CommandGuid"
                        })
                   }).then(function (response) {
                        if (response.ok) {
                            alert('Success');
                        } else {
                            console.log("fail");
                            
                            //e.complete('fail');
                        }
                   });
                }
            });
        })();
    </script>
        @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
